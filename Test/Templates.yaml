# Exported from:        http://release.trial.digital.ai/
# Release version:      25.3.0-beta.829
# Date created:         Wed Sep 03 13:16:03 GMT 2025

---
apiVersion: xl-release/v1
kind: Templates
metadata:
  path: Demo
  home: dhivya.dhanasekaran.digital.ai%2FDemo/Demo
spec:
- template: Mobile Banking Release Pipeline
  description: "This template automates the end-to-end release process for the mobile\
    \ banking application, including build, test, compliance, CAB approval, and production\
    \ deployment."
  scheduledStartDate: 2025-08-29T06:14:50.126Z
  dueDate: 2025-08-29T07:14:50.126Z
  phases:
  - phase: DEV
    tasks:
    - name: Create Change Request
      type: servicenow.CreateChangeRequest
      servicenowServer: ServiceNow
      shortDescription: "Release Deployment – Mobile Banking Application ${release-version}"
      ^description: "This change request is to deploy the Mobile Banking Application\
        \ version ${release-version}  as part of the scheduled release. The deployment\
        \ includes updated application binaries, configuration changes, and supporting\
        \ backend services. The release is intended to enhance functionality, security,\
        \ and performance. Pre and Post-deployment verification and rollback plan\
        \ are in place as per the release procedure."
      ciSysId: CIB0001234
      assignmentGroup: vg-devops
      assignedTo: vg-devops
      priority: 1 - Critical
      ^comments: "Release Deployment – Mobile Banking Application ${release-version}"
      description: This task will update the existing change request in ServiceNow
        when the release enters the CAB approval process. Every organisation may have
        different requirements for updating change requests during this stage. Digital.ai
        Release can use information from the release process to automatically update
        the change request and record the latest status in the release context for
        further use.
      variableMapping:
        pythonScript.sysId: "${sys-id}"
        pythonScript.Ticket: "${change-req-id}"
    - name: Build Application
      type: jenkins.Build
      jenkinsServer: Jenkins
      jobName: MBApp-FullBuild
      jobParameters: "releaseExplicit=${release-version} ~~rollback=true~~skip-cache=true"
      branch: "release/${release-version}"
      unstableBuildFailure: true
      description: "Digital.ai release can trigger CI builds with multiple different\
        \ build tools like Jenkins, Teamcity, Bamboo etc. In this case, we are using\
        \ Jenkins."
      variableMapping:
        pythonScript.buildNumber: "${jenkins-build-number}"
    - name: Analyze Code Compliance
      type: sonar.checkCompliance
      sonarServer: SonarQube
      resource: MBApp-CI-AllModules
      branch: "release/${release-version}"
      description: "Code compliance checks are a a very important part of the governance\
        \ of the release process. Digital.ai release integrates with a lot of popular\
        \ compliance tools like Qualys, Checkmarx, Blackduck etc and can use the output\
        \ of these tools to automatically approve/reject a release binary."
    - name: Run BVT Tests
      type: continuousTesting.TriggerEspressoTestCase
      server: ContinuousTesting
      runningType: coverage
      appUrl: https://mobbanking.s3.us-east-2.amazonaws.com/mobbanking.apk
      testAppUrl: https://mobbanking.s3.us-east-2.amazonaws.com/mobbanking-test.apk
      description: "Digital.ai release can integrate with multiple testing tools like\
        \ selenium, Digital.ai Continuous Testing suite etc to trigger tests and save\
        \ the test results in the release context. This information is used for governance\
        \ and audit within the release process."
      variableMapping:
        pythonScript.testRunId: "${ct-test-run-id}"
    - name: Confirm QA Readiness
      type: xlrelease.GateTask
      description: Digital.ai Release support manual approvals and can check conditions
        for release governance. These gates can be utilised to check for release dependencies
        in a multi-module release use case.
      conditions:
      - name: All tests pass
        type: xlrelease.GateCondition
    color: "#3d6c9e"
  - phase: QA
    tasks:
    - name: Deploy To QA
      type: xldeploy.Deploy
      server: Deploy
      deploymentApplication: Applications/MBApp
      deploymentPackage: "Applications/MBApp/${release-version}"
      deploymentEnvironment: Environments/UAT
      numberOfContinueRetrials: 0
      pollingInterval: 10
      numberOfPollingTrials: 0
      displayStepLogs: true
      connectionRetries: 10
      description: "Digital.ai release has the ability to integrate with Unix/Windows/zOS\
        \ using standard protocols in an agentless manner. Digital.ai release also\
        \ supports multiple deployment tools like Ansible, UrbanCode Deploy, Digital.ai\
        \ Deploy for deployment."
      variableMapping:
        pythonScript.deploymentVersion: "${release-version}"
    - name: Compile Test Results
      type: continuousTesting.GetTestViewResults
      server: ContinuousTesting
      testViewId: "${ct-test-run-id}"
      jenkinsBuildNumber: "${jenkins-build-number}"
      description: "Digital.ai release can integrate with multiple testing tools like\
        \ selenium, Digital.ai Continuous testing suite etc to trigger tests and save\
        \ the test results in the release context. This information is used for governance\
        \ and audit within the release process."
    - name: Create Release Notification Channel
      type: slack.CreateChannel
      slackServer: Slack
      channel: "release-${release-version}"
      description: "Digital.ai release can integrate with multiple communications\
        \ tools like slack, MS Teams etc to communicate the status of the release\
        \ to the team. It also supports mail server integration to send emails to\
        \ stakeholders or teams with the release information for awareness or seeking\
        \ approval."
    - name: Manual Testing
      type: xlrelease.ParallelGroup
      description: Digital.ai release supports parallel execution of tasks for faster
        lead times wherever possible.
      tasks:
      - name: Execute Exploratory Testing
        type: xlrelease.Task
        description: This is an example of manual task where automation is not possible.
          Digital.ai release supports manual tasks within the release execution and
          records the activity within the audit report.
      - name: Execute Security Penetration Testing
        type: xlrelease.Task
        description: This is an example of manual task where automation is not possible.
          Digital.ai release supports manual tasks within the release execution and
          records the activity within the audit report.
      - name: Confirm Performance Testing Results
        type: xlrelease.Task
        description: "This is an example of a performance testing task where full\
          \ automation may not be possible. Digital.ai Release allows such tasks to\
          \ be included in the release execution, with results—whether from automated\
          \ tools or manual verification—recorded in the audit report."
    - name: Compliance Check
      type: blackduck.checkCompliance
      blackduckServer: Blackduck
      projectName: MBApp-CI-AllModules
      versionName: "${release-version}"
      securityRiskCriticalThreshold: 1
      securityRiskHighThreshold: 3
      securityRiskMediumThreshold: 10
      securityRiskLowThreshold: 25
      licenseRiskCriticalThreshold: 1
      licenseRiskHighThreshold: 3
      licenseRiskMediumThreshold: 8
      licenseRiskLowThreshold: 30
      operationalRiskCriticalThreshold: 1
      operationalRiskHighThreshold: 5
      operationalRiskMediumThreshold: 10
      operationalRiskLowThreshold: 30
      description: "Code compliance checks are a very important part of the governance\
        \ of the release process. Digital.ai release integrates with a lot of popular\
        \ compliance tools like Qualys, Checkmarx, Blackduck etc and can use the output\
        \ of these tools to automatically approve/reject a release binary."
    color: "#3d6c9e"
  - phase: CAB
    tasks:
    - name: Update Change Request
      type: servicenow.UpdateChangeRequest
      servicenowServer: ServiceNow
      ^description: QA validation completed successfully. No critical bugs found during
        QA testing. Change is ready for CAB review.
      assignmentGroup: change_governance
      state: Awaiting CAB Approval
      priority: 1 - Critical
      shortDescription: "${change-req-id} : Ready for CAB review"
      sysId: "${sys-id}"
      description: "Open Policy Agent (OPA) is a freely available engine that enables\
        \ you to write policies in the form of code and incorporate them into your\
        \ application or process. The Release OPA Integration enables Release to work\
        \ with Open Policy Agent server to manage policies and to evaluate inputs\
        \ based on policy language known as REGO, which allows you to write policies\
        \ for various services utilizing the same language."
    - name: OPA Policy Review
      type: opa.EvaluatePolicy
      opaServer: OPA
      jsonInputForEvaluation: |-
        {
          "change_id": "${change-req-id} ",
          "change_type": "standard",
          "risk_level": "medium",
          "priority": "normal",
          "environment": "production",
          "qa_status": "passed",
          "rollback_plan_provided": true,
          "requested_by": "devops@sbank.com",
          "assigned_group": "CAB_Approval_Team",
          "justification": "Routine deployment of patch version 3.2.2",
          "implementation_plan": "Deploy via orchestrator, monitor health checks, rollback if necessary",
          "ci_affected": ["account-service", "payment-gateway"],
          "change_window_approved": true,
          "automated_tests_passed": true,
          "security_review_passed": true,
          "dependencies_resolved": true
        }
      policyName: mobile_banking_policy
      expectedOutput: "{ \"result\": false, \"explanation\": [ \"Access denied: insufficient\
        \ credentials or authorization\" ], \"policy_name\": \"mobile_banking_policy\"\
        , \"input\": {} }"
      description: "Open Policy Agent (OPA) is a freely available engine that enables\
        \ you to write policies in the form of code and incorporate them into your\
        \ application or process. The Release OPA Integration enables Release to work\
        \ with Open Policy Agent server to manage policies and to evaluate inputs\
        \ based on policy language known as REGO, which allows you to write policies\
        \ for various services utilizing the same language."
    - name: Get Change Failure Prediction
      type: crp.GetChangeRiskPrediction
      server: ChangeRiskPrediction
      changeRequestNumber: "${change-req-id}"
      projectName: MBApp-CI-AllModules
      CRPModel: CRPModel
      description: "The Change Risk Prediction: Risk Prediction Gate task in the Release\
        \ CRP integration plugin lets you define a gate threshold for a specific change\
        \ request based on its risk prediction score. This helps prevent high-risk\
        \ changes from progressing in the release pipeline, giving your team the opportunity\
        \ to address issues before they reach production."
    - name: Run "fast lane" Criteria Checks
      type: xlrelease.GateTask
      description: A gate task that checks whether the change risk meets the criteria
        for CAB approval before allowing the release to proceed.
    - name: Notify Stakeholders Of High Risk Determination
      type: slack.SendMessage
      slackServer: Slack
      channel: "release-${release-version}"
      message: |-
        The upcoming Mobile Banking App Release [Release ID / Version] has undergone risk assessment and has been classified as High Risk due to:

        1. Potential impact on critical customer transaction flows
        2. Dependencies on third-party service integrations
        3. Limited rollback options within the deployment window

        Action Required:
        Your review and approval are requested to proceed with this high-risk release. Please confirm your decision to allow adequate preparation and communication.
      description: "Notifies stakeholders if the change is determined to be high risk.\
        \ Digital.ai release can integrate with multiple communications tools like\
        \ slack, MS Teams etc to communicate the status of the release to the team.\
        \ It also supports mail server integration to send emails to stakeholders\
        \ or teams with the release information for awareness or seeking approval."
    - name: Complete CAB Review
      type: xlrelease.GateTask
      description: |-
        Complete CAB review. A Gate task contains conditions that must be fulfilled before the release can continue.

        There are two types of conditions: simple checkboxes and dependencies on other releases.
    color: "#3d6c9e"
  - phase: PROD
    tasks:
    - name: Production Deployment Gate
      type: xlrelease.GateTask
      description: |-
        Gate task to control deployment to production. A Gate task contains conditions that must be fulfilled before the release can continue.

        There are two types of conditions: simple checkboxes and dependencies on other releases.
    - name: Canary Deployment
      type: xlrelease.SequentialGroup
      description: A canary deployment gradually releases a new version to a small
        subset of users or servers before rolling it out broadly. This minimizes risk
        by validating performance and stability in a controlled manner.
      tasks:
      - name: Deploy To Canary Production
        type: xldeploy.Deploy
        server: Deploy
        deploymentApplication: Applications/MBApp
        deploymentPackage: "Applications/MBApp/${release-version}"
        deploymentEnvironment: Environments/production-pilot
        numberOfContinueRetrials: 0
        pollingInterval: 10
        numberOfPollingTrials: 0
        displayStepLogs: true
        connectionRetries: 10
        description: "The Deploy task provides integration with Deploy, the Application\
          \ Release Automation solution as part of the DevOps Platform. It is an automated\
          \ task that triggers the deployment of an application to an environment\
          \ in Deploy. Both the application and environment must be configured in\
          \ Deploy. The task provides live updates of the deployment process and completes\
          \ automatically when the deployment succeeds."
        variableMapping:
          pythonScript.deploymentVersion: "${release-version}"
      - name: Run Server Health Checks
        type: xldeploy.Controltask
        server: Deploy
        ciId: Infrastructure/production/dc1/pilot/host1
        taskName: serverStatus
        numberOfContinueRetrials: 0
        pollingInterval: 10
        numberOfPollingTrials: 0
        displayStepLogs: true
        connectionRetries: 10
        description: "The Deploy task integrates with Deploy, the Application Release\
          \ Automation solution within the DevOps Platform. It is an automated task\
          \ that triggers a control check on the deployment server to verify its status,\
          \ ensuring the server remains healthy after the latest deployment."
    - name: Confirm Full Production Readiness
      type: xldeploy.Controltask
      server: Deploy
      ciId: Infrastructure/production/dc1/pilot/host1
      taskName: checkConnection
      numberOfContinueRetrials: 0
      pollingInterval: 10
      numberOfPollingTrials: 0
      displayStepLogs: true
      connectionRetries: 10
      description: "The Deploy task integrates with Deploy, the Application Release\
        \ Automation solution within the DevOps Platform. It is an automated task\
        \ that triggers a control check on the deployment server to verify its status,\
        \ ensuring the server remains healthy before the deployment."
    - name: Promote To Full Production
      type: xlrelease.SequentialGroup
      description: "Promotes the application from the initial canary subset to full\
        \ deployment across all targets, ensuring the new version is rolled out to\
        \ the remaining infrastructure once the canary has been validated."
      tasks:
      - name: Deploy To Production
        type: xldeploy.Deploy
        server: Deploy
        deploymentApplication: Applications/MBApp
        deploymentPackage: "Applications/MBApp/${release-version}"
        deploymentEnvironment: Environments/production
        numberOfContinueRetrials: 0
        pollingInterval: 10
        numberOfPollingTrials: 0
        displayStepLogs: true
        connectionRetries: 10
        description: "The Deploy task provides integration with Deploy, the Application\
          \ Release Automation solution as part of the DevOps Platform. It is an automated\
          \ task that triggers the deployment of an application to an environment\
          \ in Deploy. Both the application and environment must be configured in\
          \ Deploy. The task provides live updates of the deployment process and completes\
          \ automatically when the deployment succeeds."
        variableMapping:
          pythonScript.deploymentVersion: "${release-version}"
    color: "#3d6c9e"
  - phase: POST-PROD
    tasks:
    - name: Close Change Request
      type: servicenow.UpdateChangeRequest
      servicenowServer: ServiceNow
      ^comments: "Release Deployment – Mobile Banking Application ${release-version}\
        \ - completed"
      shortDescription: "[Completed] Release Deployment – Mobile Banking Application\
        \ ${release-version}"
      sysId: "${sys-id}"
      closeCode: successful
      description: Closes the change request in ServiceNow after production deployment.
        Every organisation has different process/timing in terms of creating the change
        request. Digital.ai release can use the information from the release process
        and automatically update the change request.
    - name: Send Success Notification
      type: slack.SendMessage
      slackServer: Slack
      channel: "release-${release-version}"
      message: "Release complete – Version ${release-version}"
      description: "Digital.ai release can integrate with multiple communications\
        \ tools like slack, MS Teams etc to communicate the status of the release\
        \ to the team. It also supports mail server integration to send emails to\
        \ stakeholders or teams with the release information for awareness or seeking\
        \ approval."
    color: "#3d6c9e"
  variables:
  - type: xlrelease.StringVariable
    key: change-req-id
    requiresValue: false
    showOnReleaseStart: false
    label: Change request ID
    description: The ID of the created change requested
  - type: xlrelease.StringVariable
    key: sys-id
    requiresValue: false
    showOnReleaseStart: false
    label: Sys ID
    description: The technical id of the task.
  - type: xlrelease.StringVariable
    key: jenkins-build-number
    requiresValue: false
    showOnReleaseStart: false
    label: Build number
    description: Build number of the triggered job
  - type: xlrelease.StringVariable
    key: release-version
    showOnReleaseStart: false
    label: Release version
    description: Release version
    value: "12"
  - type: xlrelease.StringVariable
    key: ct-test-run-id
    requiresValue: false
    showOnReleaseStart: false
    label: Test Run Id
    description: Test Run Id
    value: "143"
  riskProfile: Default risk profile
  author: anil.anaberumutt@digital.ai
